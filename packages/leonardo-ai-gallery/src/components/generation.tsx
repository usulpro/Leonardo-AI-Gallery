/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/azbQ0q7MBtW
 */
import React from 'react';
import { GenerationCard } from './generation-card';
import { VariantCard } from './variant-card';
import { ProcessedGeneration, sortVariations } from '../model';
import { UseOptimisticReturn } from './lib/optimistic';

export function Generation(
  props: ProcessedGeneration & { optimistic: UseOptimisticReturn },
) {
  const { generated_images } = props;
  const promptStart = (props?.prompt || '').slice(0, 26);
  const promptTitle =
    promptStart.length < (props?.prompt?.length || 0)
      ? `${promptStart}...`
      : promptStart;
  const handleRegenerate = () => null;
  return (
    <section
      className="dark w-full text-white py-12 px-8"
      style={{
        backgroundImage: 'linear-gradient(45deg, #1f1f25, #2d2d2d)',
      }}
    >
      <div className="mx-auto flex flex-row justify-start items-start gap-10">
        <GenerationCard
          {...props}
          key={props.id}
          promptTitle={promptTitle}
          inputResolution={`${props.imageWidth} x ${props.imageHeight}`}
          publicImage={props.public || false}
          onRegenerate={handleRegenerate}
        />
        <div className="flex flex-row flex-wrap gap-4">
          {(generated_images || []).map((image) => (
            <VariantCard
              key={image.id}
              {...image}
              imageHeight={props.imageHeight}
              imageWidth={props.imageWidth}
              generationId={props.id}
              variations={sortVariations(image)}
              token={props.token}
              optimistic={props.optimistic}
            />
          ))}
        </div>
      </div>
    </section>
  );
}
